[{"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\index.js":"1","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\reportWebVitals.js":"2","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\App.js":"3","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\layout\\home\\Home.js":"4","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\layout\\data_sensor\\DataSensor.js":"5","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\layout\\profile\\Profile.js":"6","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\layout\\action_history\\Action.js":"7","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\layout\\login\\Login.jsx":"8","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\api\\index.js":"9","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\api\\auth.js":"10","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\selectbox\\SelectBox.js":"11","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\navbar\\Nav.js":"12","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\humidity\\Humidity.js":"13","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\dustLevel\\DustLevel.js":"14","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\button\\Button.js":"15","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\temperature\\Temperature.js":"16","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\chart\\DataSensorChart\\AreaChart.js":"17","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\chart\\DustLevelChart\\DustChart.js":"18"},{"size":606,"mtime":1732244891525,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1732244891573,"results":"21","hashOfConfig":"20"},{"size":1232,"mtime":1732244891455,"results":"22","hashOfConfig":"20"},{"size":14274,"mtime":1732244892479,"results":"23","hashOfConfig":"20"},{"size":9272,"mtime":1732244892427,"results":"24","hashOfConfig":"20"},{"size":10043,"mtime":1732244892561,"results":"25","hashOfConfig":"20"},{"size":10895,"mtime":1732244892374,"results":"26","hashOfConfig":"20"},{"size":2398,"mtime":1732244892528,"results":"27","hashOfConfig":"20"},{"size":22,"mtime":1732244891648,"results":"28","hashOfConfig":"20"},{"size":380,"mtime":1732244891626,"results":"29","hashOfConfig":"20"},{"size":2468,"mtime":1732244892036,"results":"30","hashOfConfig":"20"},{"size":2003,"mtime":1732244891985,"results":"31","hashOfConfig":"20"},{"size":609,"mtime":1732244891934,"results":"32","hashOfConfig":"20"},{"size":738,"mtime":1732244891884,"results":"33","hashOfConfig":"20"},{"size":463,"mtime":1732244891731,"results":"34","hashOfConfig":"20"},{"size":700,"mtime":1732244892084,"results":"35","hashOfConfig":"20"},{"size":2433,"mtime":1732244891808,"results":"36","hashOfConfig":"20"},{"size":1438,"mtime":1732244891837,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6xcxym",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\index.js",[],[],"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\reportWebVitals.js",[],[],"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\App.js",["99"],[],"import Home from \"./layout/home/Home\";\nimport Profile from \"./layout/profile/Profile\";\nimport Datasensor from \"./layout/data_sensor/DataSensor\";\nimport History from \"./layout/action_history/Action\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport Login from \"./layout/login/Login\";\nimport { useJwt } from 'react-jwt'\nimport { setHeader } from \"./api\";\n\nfunction App() {\n  const token = localStorage.getItem(\"token\")\n  const { isExpired } = useJwt(token)\n  const [user, setUser] = useState(!!token)\n\n  useEffect(() => {\n    if (token && !isExpired) {\n      setUser(true)\n      setHeader(token)\n    } else {\n      setUser(false)\n    }\n  }, [isExpired, token]);\n\n  return (\n    <Routes>\n      {!user ? <>\n        <Route path='/login' element={<Login setUser={setUser} />} />\n        <Route path='*' element={<Navigate to={'/login'} replace />}/>\n      </> : <> \n        <Route exact index element={<Home/>} ></Route>\n        <Route path = \"profile\" element = {<Profile/>}></Route>\n        <Route path = \"action-history\" element = {<History/>}></Route>\n        <Route path='*' element={<Navigate to={'/'} />} replace/>\n      </>}\n    </Routes>\n  );\n}\n\nexport default App;\n","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\layout\\home\\Home.js",["100","101","102"],[],"import classNames from \"classnames/bind\";\nimport styles from \"./Home.module.scss\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport React from \"react\";\nimport Tippy from \"@tippyjs/react/headless\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nimport Temperature from \"../../components/temperature/Temperature\";\nimport Humidity from \"../../components/humidity/Humidity\";\nimport DustLevel from \"../../components/dustLevel/DustLevel\";\nimport AreaChart from \"../../components/chart/DataSensorChart/AreaChart\";\nimport GasChart from \"../../components/chart/DustLevelChart/DustChart\";\nimport Nav from \"../../components/navbar/Nav\";\n// import WebSocket from \"../../websocket/WebSoket\";\n\nimport ImgLight from \"../../img/idea.png\";\nimport LightOf from \"../../img/big-light.png\";\nimport DoorClose from '../../img/doorclose.png'\nimport DoorOpen from '../../img/dooropen.png'\nimport { HiBars3 } from \"react-icons/hi2\";\nimport { StompSessionProvider, useSubscription } from \"react-stomp-hooks\";\nconst cx = classNames.bind(styles);\n\nexport default function DashBoard() {\n    return (\n        //Initialize Stomp connection, will use SockJS for http(s) and WebSocket for ws(s)\n        //The Connection can be used by all child components via the hooks or hocs.\n        <StompSessionProvider\n            url={\"ws://localhost:8080/ws\"}\n            //All options supported by @stomp/stompjs can be used here\n        >\n            <Home />\n        </StompSessionProvider>\n    );\n}\n\nfunction Home() {\n    const location = useLocation();\n    const props = location.state;\n    const [light1, setLight1] = useState(\n        props ? props.stateLed : false\n    );\n    const [light2, setLight2] = useState(\n        props ? props.stateLed : false\n    );\n    const [light3, setLight3] = useState(\n        props ? props.stateLed : false\n    );\n    const [door, setDoor] = useState(\n        props ? props.stateFan : false\n    );\n    const [dataSensor, setDataSensor] = useState(null);\n    const [gas, setGas] = useState(null);\n\n    useSubscription(\"/topic/DHT11_data/SMH-001/DHT11_S\", (message) =>\n        setDataSensor(JSON.parse(message.body))\n    );\n    useSubscription(\"/topic/gas_data/SMH-001/GAS_SENSOR_S\", (message) =>\n        setGas(JSON.parse(message.body))\n    );\n    useSubscription('/topic/light_data/SMH-001/PB_001', message => {\n        setLight1(JSON.parse(message.body)?.status === 'ON')\n    })\n    useSubscription('/topic/light_data/SMH-001/PK_001', message => {\n        setLight2(JSON.parse(message.body)?.status === 'ON')\n    })\n    useSubscription('/topic/light_data/SMH-001/PN_001', message => {\n        setLight3(JSON.parse(message.body)?.status === 'ON')\n    })\n    useSubscription('/topic/door_data/SMH-001/MAIN_DOOR', message => {\n        setDoor(JSON.parse(message.body)?.status === 'Opened')\n    })\n\n    const getFormattedTimestamp = () => {\n        const date = new Date();\n        const year = date.getFullYear();\n        let month = String(date.getMonth() + 1).padStart(2, \"0\");\n        let day = String(date.getDate()).padStart(2, \"0\");\n        let hour = String(date.getHours()).padStart(2, \"0\");\n        let minute = String(date.getMinutes()).padStart(2, \"0\");\n        let second = String(date.getSeconds()).padStart(2, \"0\");\n        return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n    };\n\n    const renderTippy = (prop) => {\n        return (\n            <div>\n                <Nav\n                    props={{\n                        stateLed1: light1,\n                        stateLead2: light2,\n                        stateLed3: light3,\n                        stateFan: door,\n                    }}\n                />\n            </div>\n        );\n    };\n\n    const handleClick = (deviceType, lightNum) => {\n        let status;\n        let light_id;\n        const home_id = localStorage.getItem(\"home_id\");\n\n        const time = getFormattedTimestamp();\n        if (deviceType === \"Light\") {\n            if (lightNum === 1) {\n                light_id = \"PB_001\";\n                status = light1 ? \"OFF\" : \"ON\";\n                setLight1((prev) => !prev);\n            }\n            if (lightNum === 2) {\n                light_id = \"PK_001\";\n                status = light2 ? \"OFF\" : \"ON\";\n                setLight2((prev) => !prev);\n            }\n            if (lightNum === 3) {\n                light_id = \"PN_001\";\n                status = light3 ? \"OFF\" : \"ON\";\n                setLight3((prev) => !prev);\n            }\n\n            axios\n                .post(\"http://localhost:8080/changeLightStatus\", {\n                    home_id,\n                    light_id,\n                    status,\n                })\n                .then((res) => console.log(res))\n                .catch((e) => console.log(e));\n        } else {\n            status = door ? \"Closed\" : \"Opened\";\n            setDoor((prev) => !prev);\n\n            axios\n                .post(\"http://localhost:8080/changeDoorStatus\", {\n                    home_id,\n                    door_id: \"MAIN_DOOR\",\n                    status,\n                })\n                .then((res) => console.log(res))\n                .catch((e) => console.log(e));\n        }\n    };\n    return (\n        <div className={cx(\"container_app\")}>\n            <div>\n                <div className={cx(\"title\")}>\n                    <h3>IoT & Ứng dụng</h3>\n                    <Tippy\n                        render={renderTippy}\n                        interactive\n                        delay={[100, 100]}\n                        offset={[-85, -3]}\n                        placement=\"bottom\"\n                    >\n                        <span className={cx(\"icon-nav\")}>\n                            <HiBars3 />\n                        </span>\n                    </Tippy>\n                </div>\n            </div>\n            <div className={cx(\"container_app-header\")}>\n                <div className={cx(\"row\")}>\n                    <div className={cx(\"col-4\")}>\n                        <Temperature\n                            temp={\n                                dataSensor\n                                    ? dataSensor.temperature.toFixed(1)\n                                    : \"\"\n                            }\n                        />\n                    </div>\n                    <div className={cx(\"col-4\")}>\n                        <Humidity\n                            humidity={\n                                dataSensor ? dataSensor.humidity.toFixed(1) : \"\"\n                            }\n                        />\n                    </div>\n                    <div className={cx(\"col-4\")}>\n                        <DustLevel\n                            gas={gas}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={cx(\"container_app-body\")}>\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <div className={cx(\"item-light\")}>\n                            {light1 ? (\n                                <div className={cx(\"item\")}>\n                                    <img\n                                        src={ImgLight}\n                                        alt=\"Light On\"\n                                        className={cx(\"light-on\")}\n                                    />\n                                    <button\n                                        onClick={() => handleClick(\"Light\", 1)}\n                                        className={cx(\"off\")}\n                                    >\n                                        OFF\n                                    </button>\n                                    <p className={cx('title')}>Phòng bếp</p>\n\n                                </div>\n                            ) : (\n                                <div className={cx(\"item\")}>\n                                    <img\n                                        src={LightOf}\n                                        alt=\"Light Off\"\n                                        className={cx(\"light-off\")}\n                                    />\n                                    <button\n                                        onClick={() => handleClick(\"Light\", 1)}\n                                        className={cx(\"on\")}\n                                    >\n                                        ON\n                                    </button>\n                                    <p className={cx('title')}>Phòng bếp</p>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-3\">\n                        <div className={cx(\"item-light\")}>\n                            {light2 ? (\n                                <div className={cx(\"item\")}>\n                                    <img\n                                        src={ImgLight}\n                                        alt=\"Light On\"\n                                        className={cx(\"light-on\")}\n                                    />\n                                    <button\n                                        onClick={() => handleClick(\"Light\", 2)}\n                                        className={cx(\"off\")}\n                                    >\n                                        OFF\n                                    </button>\n                                    <p className={cx('title')}>Phòng khách</p>\n                                </div>\n                            ) : (\n                                <div className={cx(\"item\")}>\n                                    <img\n                                        src={LightOf}\n                                        alt=\"Light Off\"\n                                        className={cx(\"light-off\")}\n                                    />\n                                    <button\n                                        onClick={() => handleClick(\"Light\", 2)}\n                                        className={cx(\"on\")}\n                                    >\n                                        ON\n                                    </button>\n                                    <p className={cx('title')}>Phòng khách</p>\n\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-3\">\n                        <div className={cx(\"item-light\")}>\n                            {light3 ? (\n                                <div className={cx(\"item\")}>\n                                    <img\n                                        src={ImgLight}\n                                        alt=\"Light On\"\n                                        className={cx(\"light-on\")}\n                                    />\n                                    <button\n                                        onClick={() => handleClick(\"Light\", 3)}\n                                        className={cx(\"off\")}\n                                    >\n                                        OFF\n                                    </button>\n                                    <p className={cx('title')}>Phòng ngủ</p>\n                                </div>\n                            ) : (\n                                <div className={cx(\"item\")}>\n                                    <img\n                                        src={LightOf}\n                                        alt=\"Light Off\"\n                                        className={cx(\"light-off\")}\n                                    />\n                                    <button\n                                        onClick={() => handleClick(\"Light\", 3)}\n                                        className={cx(\"on\")}\n                                    >\n                                        ON\n                                    </button>\n                                    <p className={cx('title')}>Phòng ngủ</p>\n\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-3\">\n                        <div\n                            className={cx(\"item-fan\")}\n                            style={{ marginTop: 40 }}\n                        >\n                            {door ? (\n                                <div className={cx(\"item\")}>\n                                    <img\n                                        src={DoorOpen}\n                                        alt=\"Fan On\"\n                                        className={cx(\"fan-on\")}\n                                    />\n                                    <button\n                                        onClick={() => handleClick(\"Fan\")}\n                                        className={cx(\"off\")}\n                                    >\n                                        CLOSE\n                                    </button>\n                                    <p className={cx('title')}>Cửa chính</p>\n                                </div>\n                            ) : (\n                                <div className={cx(\"item\")}>\n                                    <img\n                                        src={DoorClose}\n                                        alt=\"Fan Off\"\n                                        className={cx(\"fan-off\")}\n                                    />\n                                    <button\n                                        onClick={() => handleClick(\"Fan\")}\n                                        className={cx(\"on\")}\n                                    >\n                                        OPEN\n                                    </button>\n                                    <p className={cx('title')}>Cửa chính</p>\n\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <AreaChart data={dataSensor ? dataSensor : \"\"} />\n                <GasChart data = {gas}/>\n            </div>\n        </div>\n    );\n}\n","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\layout\\data_sensor\\DataSensor.js",[],[],"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\layout\\profile\\Profile.js",[],[],"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\layout\\action_history\\Action.js",["103"],[],"import classNames from \"classnames/bind\";\nimport styles from \"./Styles.module.scss\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport Tippy from \"@tippyjs/react/headless\";\nimport { HiBars3 } from \"react-icons/hi2\";\nimport { IoMdArrowDropdown } from \"react-icons/io\";\n\nimport Nav from \"../../components/navbar/Nav\";\nimport SelectBox from \"../../components/selectbox/SelectBox\";\n\nconst cx = classNames.bind(styles);\n\nfunction History() {\n    const location = useLocation();\n    const props = location.state;\n    const [data, setData] = useState([]);\n    const [filterPage, setFilterPage] = useState([])\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n    const [type, setType] = useState('dht');\n    const [keyword, setKeyword] = useState('');\n    const [curPage, setCurPage] = useState(0)\n    const [pageSize, setPageSize] = useState(0)\n\n    const propsData = {\n        startDate,\n        endDate,\n        type,\n        keyword,\n        setStartDate,\n        setEndDate,\n        setType,\n        setKeyword,\n    };\n\n\n    const onSearch = async () => {\n        startDate.setHours(0)\n        startDate.setMinutes(0)\n        startDate.setSeconds(0)\n\n        const eDate = new Date()\n        eDate.setFullYear(endDate.getFullYear())\n        eDate.setMonth(endDate.getMonth())\n        eDate.setDate(endDate.getDate() + 1)\n        eDate.setHours(23)\n        eDate.setMinutes(59)\n        eDate.setSeconds(59)\n        axios.post('http://localhost:8080/SearchLog', {\n            type,\n            start: startDate,\n            end: eDate,\n            keyWord: keyword\n        }).then((res) => setData(res.data.sort((a, b) => {\n            return new Date(b.timestamp) - new Date(a.timestamp)\n        })))\n    }\n\n    useEffect(() => {\n        setData([])\n        setCurPage(0)\n        setPageSize(0)\n    }, [type])\n\n    useEffect(() => {\n        setPageSize(Math.min(Math.ceil((data?.length || 0) / 50), 25))\n    }, [data])\n\n    useEffect(() => {\n        setFilterPage(data.slice(curPage * 50, Math.min((curPage + 1) * 50, data.length)))\n    }, [curPage, data])\n\n    const renderTippy = (prop) => {\n        return (\n            <div>\n                <Nav props={props} />\n            </div>\n        );\n    };\n\n    return (\n        <div className={cx(\"ctn\")}>\n            <div className={cx(\"container\")}>\n                <div className={cx(\"content\")}>\n                    <div className={cx(\"card\")}>\n                        <div className={cx(\"card-header\")}>\n                            <h4>Lịch sử</h4>\n                            <Tippy\n                                render={renderTippy}\n                                interactive\n                                delay={[200, 100]}\n                                offset={[-85, 10]}\n                                placement=\"bottom\"\n                            >\n                                <span className={cx(\"icon-nav\")}>\n                                    <HiBars3 className={cx(\"icon\")} />\n                                </span>\n                            </Tippy>\n                        </div>\n\n                        <div className={cx(\"card-body\")}>\n                            <SelectBox {...propsData} onSearch={onSearch} />\n                            {data.length > 0 ? (\n                                <>\n                                    <table className={cx(\"table\")}>\n                                        <thead>\n                                            <tr>\n                                                <th>ID</th>\n                                                {type !== 'gas' && <th>Name</th>}\n                                                <th>Date</th>\n                                                {type === 'dht' && <>\n                                                    <th>Humidity</th>\n                                                    <th>Temperature</th>\n                                                </>}\n                                                {type === 'gas' && <th>Gas</th>}\n                                                {type === 'door' && <>\n                                                    <th>Status</th>\n                                                    <th>User name</th>\n                                                </>}\n                                                {/* Add more table headers based on your data structure */}\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {filterPage.map((item, index) => {\n                                                const timestampDate = new Date(item.timestamp);\n                                                const formattedTimestamp = `${timestampDate.getFullYear()}-${(timestampDate.getMonth() + 1).toString().padStart(2, '0')}-${timestampDate.getDate().toString().padStart(2, '0')} ${timestampDate.getHours().toString().padStart(2, '0')}:${timestampDate.getMinutes().toString().padStart(2, '0')}:${timestampDate.getSeconds().toString().padStart(2, '0')}`;\n\n                                                return (\n                                                    <tr key={index} style={{ color: item?.value > 0 ? 'red' : '#fff' }}>\n                                                        <td>{item.dhtId || item.gas_sensor_id || item.doorId}</td>\n                                                        {type !== 'gas' && <td>{item.description}</td>}\n                                                        <td>{formattedTimestamp}</td>\n                                                        {type === 'dht' && (\n                                                            <>\n                                                                <td>{item.humidity?.toFixed(1)}</td>\n                                                                <td>{item.temperature?.toFixed(1)}</td>\n                                                            </>\n                                                        )}\n                                                        {type === 'gas' && <td>{item.value?.toFixed(1)}</td>}\n                                                        {type === 'door' && (\n                                                            <>\n                                                                <td>{item.status}</td>\n                                                                <td>{item.name}</td>\n                                                            </>\n                                                        )}\n                                                        {/* Add more table data based on your data structure */}\n                                                    </tr>\n                                                );\n                                            })}\n                                        </tbody>\n\n                                    </table>\n                                    <nav aria-label=\"Page navigation example\">\n                                        <ul className=\"pagination\">\n                                            <li\n                                                className=\"page-item\">\n                                                <button className=\"page-link\"\n                                                    disabled={curPage === 0}\n                                                    style={{ backgroundColor: 'transparent', color: '#fff' }}\n                                                    onClick={e => setCurPage(curPage - 1)}\n                                                >\n                                                    Prev\n                                                </button>\n                                            </li>\n                                            {\n                                                Array.from({\n                                                    length: pageSize\n                                                }, (_, index) => index)\n                                                    .map(v =>\n                                                        <li\n                                                            key={v}\n                                                            className=\"page-item\">\n                                                            <button className=\"page-link\"\n                                                                style={{ color: curPage === v ? '#000' : '#fff', backgroundColor: 'transparent' }}\n                                                                onClick={e => setCurPage(v)}\n                                                            >\n                                                                {v + 1}\n                                                            </button>\n                                                        </li>\n                                                    )\n                                            }\n                                            <li\n                                                className=\"page-item\">\n                                                <button\n                                                    className=\"page-link\"\n                                                    disabled={curPage === pageSize - 1}\n                                                    style={{ backgroundColor: 'transparent', color: '#fff' }}\n                                                    onClick={e => setCurPage(curPage + 1)}\n                                                >\n                                                    Next\n                                                </button>\n                                            </li>\n                                        </ul>\n                                    </nav>\n                                </>\n                            ) : (\n                                <div className={cx(\"data-not-found\")}>\n                                    <span>\n                                        <img\n                                            src=\"https://frontend.tikicdn.com/_desktop-next/static/img/account/empty-order.png\"\n                                            alt=\"\"\n                                        />\n                                    </span>\n                                    <span className={cx(\"text\")}>\n                                        No data found for this period of time!\n                                    </span>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default History;\n","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\layout\\login\\Login.jsx",["104"],[],"import axios from \"axios\"\nimport { useState } from \"react\"\nimport { login, setHeader } from \"../../api\"\n\nconst Login = ({ setUser }) => {\n  const [userName, setUserName] = useState('')\n  const [password, setPassword] = useState('')\n  const [errMsg, setErrMsg] = useState('')\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    \n    await login({userName, passWord: password})\n      .then(res => {\n        console.log(res)\n        if(res.status === 200) {\n          setErrMsg('')\n          console.log(res)\n          localStorage.setItem('home_id', res.data.deviceId)\n          setHeader(res.data.token)\n          setUser(true)\n        } else {\n          setErrMsg(res.response.data)\n        }\n      })\n      .catch(e => console.log(e))\n  }\n\n  return (\n    <div style={{height: '100vh', display: 'flex', marginTop: '150px', justifyContent: 'center'}}>\n      <form style={{width: \"450px\"}}>\n      \n      <header style={{fontSize: '48px', color: '#0d6efd', fontWeight: 'bold', textAlign: 'center', marginBottom: '40px'}}>Login</header>\n        <div class=\"form-outline mb-4\">\n          <input type=\"email\" id=\"form2Example1\" class=\"form-control\" value={userName} onChange={e => setUserName(e.target.value)} />\n          <label class=\"form-label\" htmlFor=\"form2Example1\">Username</label>\n        </div>\n\n        <div class=\"form-outline mb-2\">\n          <input type=\"password\" id=\"form2Example2\" class=\"form-control\" value={password} onChange={e => setPassword(e.target.value)} />\n          <label class=\"form-label\" htmlFor=\"form2Example2\">Password</label>\n        </div>\n\n        {\n          !!errMsg && <div className=\"form-outline mb-4\">\n            <div class=\"invalid-feedback\" style={{display: 'block'}}>{errMsg}</div>\n          </div>\n        }\n\n        <div class=\"row mb-4\">\n          <div class=\"col d-flex justify-content-center\">\n            <div class=\"form-check\">\n              <input class=\"form-check-input\" type=\"checkbox\" id=\"form2Example31\" />\n              <label class=\"form-check-label\" htmlFor=\"form2Example31\"> Remember me </label>\n            </div>\n          </div>\n\n          <div class=\"col\">\n            <a href=\"#!\">Forgot password?</a>\n          </div>\n        </div>\n\n        <button type=\"button\" class=\"btn btn-primary btn-block mb-4\" style={{width: '100%'}} onClick={e => onSubmit(e)}>Sign in</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\api\\index.js",[],[],"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\api\\auth.js",[],[],"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\selectbox\\SelectBox.js",[],[],"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\navbar\\Nav.js",[],[],"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\humidity\\Humidity.js",[],[],"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\dustLevel\\DustLevel.js",["105"],[],"import classNames from \"classnames/bind\";\nimport styles from \"./DustLevel.module.scss\";\nimport { FaGripfire } from \"react-icons/fa\";\n\n\nimport {GiDustCloud} from \"react-icons/gi\";\n\nconst cx = classNames.bind(styles);\n\nfunction DustLevel({gas}) {\n    const dustLevel = gas?.value.toFixed(1)\n    return (\n        <div className={dustLevel > 0 ? cx('containerRed'): cx('container')}>\n            <div className={cx('description')}>\n                <p className={cx('title')}>Khí gas</p>\n            </div>\n            <div className={cx('img-des')}>\n                <p className={cx('dustlevel')}>{dustLevel}  ppm</p>\n                <FaGripfire className={cx('icon')}/>\n            </div>\n        </div>\n    );\n}\n\n\nexport default DustLevel;","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\button\\Button.js",[],[],"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\temperature\\Temperature.js",[],[],"E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\chart\\DataSensorChart\\AreaChart.js",["106"],[],"import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames/bind';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport styles from './Area.module.scss';\n\nconst cx = classNames.bind(styles);\n\nfunction AreaChartComponent(props) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const dataSensor = props.data;\n    if (dataSensor) {\n      const newData = [...data];\n      const date = new Date(dataSensor.timestamp);\n\n      const hour = date.getHours();\n      const minutes = date.getMinutes();\n      const seconds = date.getSeconds();\n      newData.push({\n        name: `${hour}:${minutes}:${seconds}`,\n        Temp: dataSensor.temperature,\n        Humidity: dataSensor.humidity,\n      });\n\n      if (newData.length > 8) {\n        newData.shift();\n      }\n\n      setData(newData);\n    }\n  }, [props.data]);\n\n  return (\n    <div>\n      <div className={cx('container_chart')}>\n        <ResponsiveContainer width=\"100%\" height={360}>\n          <AreaChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis domain={['auto', 'auto']} label={{ value: '°C', position: 'insideLeft' }}/>\n            <Tooltip />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <Area type=\"monotone\" dataKey=\"Temp\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n            {/* <Area type=\"monotone\" dataKey=\"Humidity\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" /> */}\n          </AreaChart>\n        </ResponsiveContainer>\n        <h6>Biểu đồ  nhiệt độ </h6>\n      </div>\n      <div className={cx('container_chart')} style={{margin: '5px 0'}}>\n        <ResponsiveContainer width=\"100%\" height={360}>\n          <AreaChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n\n            <YAxis domain={['auto', 'auto']} label={{ value: '%',  position: 'insideLeft' }}/>\n\n            <Tooltip />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            {/* <Area type=\"monotone\" dataKey=\"Temp\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" /> */}\n            <Area type=\"monotone\" dataKey=\"Humidity\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n          </AreaChart>\n        </ResponsiveContainer>\n        <h6>Biểu đồ  độ ẩm</h6>\n      </div>\n    </div>\n  );\n}\n\nexport default AreaChartComponent;\n","E:\\IOT_PROJECT-Dev_LgBao\\Frontend\\src\\components\\chart\\DustLevelChart\\DustChart.js",["107"],[],"import React, { useEffect, useState} from 'react';\nimport classNames from 'classnames/bind';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport styles from './DustChart.module.scss';\n\nconst cx = classNames.bind(styles);\n\nfunction GasChart(props) {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    if (props.data !== null) {\n      const newData = [...data];\n      const date = new Date(props.data.timestamp);\n      const hour = date.getHours();\n      const minutes = date.getMinutes();\n      const seconds = date.getSeconds();\n      newData.push({\n        name: `${hour}:${minutes}:${seconds}`,\n        GasLevel: props.data.value,\n      });\n      if (newData.length === 5) {\n        newData.shift();\n      }\n      setData(newData);\n    }\n  }, [props]);\n\n  return (\n    <div className={cx('container_chart')}>\n      <ResponsiveContainer width=\"100%\" height={360}>\n        <AreaChart data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis label={{ value: 'ppm', position: 'insideLeft' }}/>\n          <Tooltip/>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Area type=\"monotone\" dataKey=\"GasLevel\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#ece03d\">\n          </Area>\n        </AreaChart>\n      </ResponsiveContainer>\n      <h6>Biểu đồ khí gas</h6>\n    </div>\n  );\n};\n\nexport default GasChart;\n",{"ruleId":"108","severity":1,"message":"109","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":18},{"ruleId":"108","severity":1,"message":"112","line":4,"column":20,"nodeType":"110","messageId":"111","endLine":4,"endColumn":29},{"ruleId":"108","severity":1,"message":"113","line":8,"column":26,"nodeType":"110","messageId":"111","endLine":8,"endColumn":38},{"ruleId":"108","severity":1,"message":"114","line":107,"column":15,"nodeType":"110","messageId":"111","endLine":107,"endColumn":19},{"ruleId":"108","severity":1,"message":"115","line":8,"column":10,"nodeType":"110","messageId":"111","endLine":8,"endColumn":27},{"ruleId":"108","severity":1,"message":"116","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"117","line":6,"column":9,"nodeType":"110","messageId":"111","endLine":6,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":32,"column":6,"nodeType":"120","endLine":32,"endColumn":18,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"119","line":26,"column":6,"nodeType":"120","endLine":26,"endColumn":13,"suggestions":"122"},"no-unused-vars","'Datasensor' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'W3CWebSocket' is defined but never used.","'time' is assigned a value but never used.","'IoMdArrowDropdown' is defined but never used.","'axios' is defined but never used.","'GiDustCloud' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["123"],["124"],{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [data, props.data]",{"range":"129","text":"130"},"Update the dependencies array to be: [data, props]",{"range":"131","text":"132"},[891,903],"[data, props.data]",[816,823],"[data, props]"]